import{_ as n,o as s,c as a,a as e}from"./app-9c0a74f5.js";const t={},p=e(`<h1 id="签名" tabindex="-1"><a class="header-anchor" href="#签名" aria-hidden="true">#</a> 签名</h1><h4 id="一、排序" tabindex="-1"><a class="header-anchor" href="#一、排序" aria-hidden="true">#</a> 一、排序</h4><p>将请求参数以键 <code>升序</code> 排序。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;key3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;value3&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;key1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;value1&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;key2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;value2&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">ksort</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二、拼接字符串" tabindex="-1"><a class="header-anchor" href="#二、拼接字符串" aria-hidden="true">#</a> 二、拼接字符串</h4><p>将排序后的请求参数连接成字符串。使用 <code>=</code> 连接参数键和参数值， 使用 <code>&amp;</code> 连接参数。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stringToSign</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;key1=value1&amp;key2=value2&amp;key3=value3&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="三、哈希" tabindex="-1"><a class="header-anchor" href="#三、哈希" aria-hidden="true">#</a> 三、哈希</h4><p>使用 HMAC-SHA256 和 密钥 对字符串进行哈希处理。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$signature</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;CLIENT SECRET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="php-示例代码" tabindex="-1"><a class="header-anchor" href="#php-示例代码" aria-hidden="true">#</a> PHP 示例代码</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Create a string to sign given parameters.
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$parameters</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">createStringToSign</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">ksort</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$parameters</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$string</span> <span class="token operator">.=</span> <span class="token variable">$key</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;=&quot;</span> <span class="token operator">.</span> <span class="token variable">$value</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&amp;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Create a signed string.
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$stringToSign</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$secret</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">signed</span><span class="token punctuation">(</span><span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token variable">$secret</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token variable">$secret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;client_key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;YOUR CLIENT KEY&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;amount&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;100.00&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;channel_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;1000&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;out_transfer_no&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;20230101000000&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;notify_url&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;https://example.com/notify/url&#39;</span><span class="token punctuation">,</span>

    <span class="token string single-quoted-string">&#39;extra&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;bank_code&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;BANK&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$stringToSign</span> <span class="token operator">=</span> <span class="token function">createStringToSign</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;YOUR CLIENT SECRET&#39;</span><span class="token punctuation">;</span>

<span class="token variable">$signature</span> <span class="token operator">=</span> <span class="token function">signed</span><span class="token punctuation">(</span><span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token variable">$secret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$signature</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),i=[p];function o(l,c){return s(),a("div",null,i)}const u=n(t,[["render",o],["__file","index.html.vue"]]);export{u as default};
